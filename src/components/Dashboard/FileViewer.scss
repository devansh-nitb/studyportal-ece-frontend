@import '../../styles/variables';
@import '../../styles/mixins';

.file-viewer-container {
  position: fixed; 
  top: 0;
  left: 0;
  width: 100vw; 
  height: 100vh; 
  background-color: var(--background-color); 
  z-index: 1001;

  display: flex;
  flex-direction: column;
}

.viewer-header {
  background-color: var(--card-background);
  color: var(--text-color);
  padding: $spacing-md $spacing-xl;
  box-shadow: $shadow-sm;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 1010; // Ensure header is above content

  h3 {
    margin: 0;
    font-size: $font-size-lg;
  }

  .close-viewer-btn {
    @include secondary-button;
    font-size: $font-size-sm;
    padding: $spacing-xs $spacing-sm;
    display: flex;
    align-items: center;
    gap: $spacing-xs;
    background-color: var(--delete-button-background);
    &:hover {
      background-color: var(--delete-button-hover-background); // Corrected variable usage
      color: var(--button-text);
    }
  }
}

.viewer-content {
  flex-grow: 1;
  overflow: hidden; // Hide overflow from this container, let children handle scroll
  display: flex;
  // Removed align-items and justify-content from here.
  // Its child (.pdf-viewer, .image-viewer, .url-viewer) will manage its own full size.
  padding: $spacing-md; // Add some padding around the content
}

.pdf-viewer {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center; // Center toolbar and document horizontally
  justify-content: flex-start; // Align toolbar to the top
}

.pdf-toolbar {
  background-color: var(--card-background);
  color: var(--text-color);
  padding: $spacing-sm $spacing-md;
  box-shadow: $shadow-sm; // Use general shadow variable
  display: flex;
  align-items: center;
  gap: $spacing-md;
  margin-bottom: $spacing-sm;
  z-index: 1020; // Ensure toolbar is above PDF
  border-radius: $border-radius-sm;
  flex-wrap: wrap; // Allow items to wrap on smaller screens
  justify-content: center; // Center toolbar items if they wrap

  .toolbar-button {
    @include secondary-button;
    font-size: $font-size-sm;
    padding: $spacing-xs $spacing-sm;
    display: flex;
    align-items: center;
    gap: $spacing-xs;

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  .toolbar-separator {
    height: 20px;
    border-left: 1px solid var(--border-color);
  }

  .page-input {
    width: 50px;
    padding: $spacing-xs;
    text-align: center;
    border: 1px solid var(--input-border);
    border-radius: $border-radius-sm;
    font-size: $font-size-sm;
    background-color: var(--input-background);
    color: var(--text-color);
  }
}

.pdf-document-wrapper {
  flex-grow: 1; // Take all remaining vertical space in pdf-viewer
  overflow: auto; // Enable scrolling for the document itself
  display: flex;
  align-items: center; // Center PDF pages horizontally within the wrapper
  justify-content: flex-start; // Align PDF pages to the top in scroll view
  width: 100%; // Ensure it takes full width
  @include custom-scrollbar; // Apply custom scrollbar
  border-radius: $border-radius-md; // Rounded corners for the wrapper
  border: 1px solid var(--border-color); // Subtle border
  background-color: var(--input-background); // Background behind PDF pages

  &.scroll-view {
    flex-direction: column;
    align-items: center; // Center pages horizontally in scroll view
    justify-content: flex-start; // Stack from top
  }

  &.single-page-view {
    flex-direction: column; // Keep as column for single page to center it
    justify-content: center; // Center single page vertically
  }

  .react-pdf__Document {
    width: 100%; // Document container takes full width
    display: flex;
    flex-direction: column;
    align-items: center; // Center pages horizontally within the document
    padding: $spacing-md; // Padding around the document

    .react-pdf__Page {
      margin-bottom: $spacing-md; // Space between pages in scroll view
      box-shadow: $shadow-sm; // Shadow for individual pages
      border: 1px solid var(--border-color); // Border for pages
      border-radius: $border-radius-sm; // Small radius for pages
      background-color: var(--card-background); // Page background

      canvas {
        width: 100% !important; // Important to override react-pdf inline styles
        height: auto !important;
      }
    }
  }
}

.image-viewer {
  width: 100%; // Take full width of viewer-content
  height: 100%; // Take full height of viewer-content
  display: flex;
  align-items: center;
  justify-content: center;

  .viewed-image {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    box-shadow: $shadow-md;
  }
}

.url-viewer {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;

  .url-warning {
    background-color: var(--warning-color);
    color: var(--warning-text-color);
    padding: $spacing-md;
    text-align: center;
    font-size: $font-size-sm;
    border-bottom: 1px solid var(--border-color);
    border-radius: $border-radius-sm;
    margin-bottom: $spacing-md;
  }

  .external-iframe {
    flex-grow: 1;
    width: 100%;
    height: 100%;
    border: none;
    border-radius: $border-radius-md;
    box-shadow: $shadow-sm;
  }
}

.error-message,
.no-pdf-data {
  padding: $spacing-lg;
  text-align: center;
  color: var(--error-text);
  background-color: var(--error-color);
  border-radius: $border-radius-sm;
  margin: $spacing-lg auto; // Center horizontally
  max-width: 500px;
  width: 90%;
  box-shadow: $shadow-sm;
}
